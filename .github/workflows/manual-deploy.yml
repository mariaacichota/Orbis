name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Target to deploy'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - backend
        - frontend
      environment:
        description: 'Environment'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production

jobs:
  manual-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Configurar Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build Backend
        if: inputs.deploy_target == 'all' || inputs.deploy_target == 'backend'
        run: |
          mvn clean package -DskipTests

      - name: Build Frontend
        if: inputs.deploy_target == 'all' || inputs.deploy_target == 'frontend'
        run: |
          cd frontend
          npm install
          npm run build

      - name: Configurar Minikube
        uses: medyagh/setup-minikube@master
        with:
          minikube-version: 'latest'
          kubernetes-version: 'latest'

      - name: Build Docker Images
        run: |
          eval $(minikube docker-env)
          if [ "${{ inputs.deploy_target }}" = "all" ] || [ "${{ inputs.deploy_target }}" = "backend" ]; then
            docker build -t orbis-backend:latest -f docker/backend.Dockerfile .
          fi
          if [ "${{ inputs.deploy_target }}" = "all" ] || [ "${{ inputs.deploy_target }}" = "frontend" ]; then
            docker build -t orbis-frontend:latest -f docker/frontend.Dockerfile .
          fi

      - name: Deploy to ${{ inputs.environment }}
        run: |
          echo "Deploying to ${{ inputs.environment }} environment"
          echo "Target: ${{ inputs.deploy_target }}"
          
          if [ "${{ inputs.deploy_target }}" = "all" ] || [ "${{ inputs.deploy_target }}" = "backend" ]; then
            kubectl apply -f k8s/backend-deployment.yaml
            kubectl apply -f k8s/backend-service.yaml
          fi
          
          if [ "${{ inputs.deploy_target }}" = "all" ] || [ "${{ inputs.deploy_target }}" = "frontend" ]; then
            kubectl apply -f k8s/frontend-deployment.yaml
            kubectl apply -f k8s/frontend-service.yaml
          fi

      - name: Verificar status do deploy
        run: |
          kubectl get pods
          kubectl get services 
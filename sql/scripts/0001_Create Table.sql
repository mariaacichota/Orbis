--1. USER_TYPES (Tipos de Usuário)--

CREATE TABLE USER_TYPES (
    ID_USER_TYPE INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático iniciando em 1
    DESCRIPTION_TYPE VARCHAR(50) UNIQUE NOT NULL
);

INSERT INTO USER_TYPES (DESCRIPTION_TYPE) VALUES ('ORGANIZER'), ('PARTICIPANT');

--2. STATUS_EVENT (Status do Evento)--

CREATE TABLE STATUS_EVENT (
    ID_STATUS_EVENT INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    DESCRIPTION_STATUS VARCHAR(50) UNIQUE NOT NULL
);

INSERT INTO STATUS_EVENT (DESCRIPTION_STATUS) VALUES ('ACTIVE'), ('CANCELED'), ('FINISHED');

--3. STATUS_ORDER (Status do Pedido)--

CREATE TABLE STATUS_ORDER (
    ID_STATUS_ORDER INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    DESCRIPTION_STATUS VARCHAR(50) UNIQUE NOT NULL
);

INSERT INTO STATUS_ORDER (DESCRIPTION_STATUS) VALUES ('PENDING'), ('PAID'), ('CANCELED');

--4. TICKET_TYPES (Tipos de Ingressos)--

CREATE TABLE TICKET_TYPES (
    ID_TICKET_TYPES INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    DESCRIPTION_TYPE VARCHAR(50) UNIQUE NOT NULL
);

INSERT INTO TICKET_TYPES (DESCRIPTION_TYPE) VALUES ('FULL'), ('HALF'), ('VIP'), ('STUDENT'), ('FREE');

--5. MESSAGE_STATUS (Status da Notificação)
CREATE TABLE NOTIFICATION_STATUS (
    ID_NOTIFICATION_STATUS INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    DESCRIPTION_STATUS VARCHAR(50) UNIQUE NOT NULL
);

INSERT INTO NOTIFICATION_STATUS (DESCRIPTION_STATUS) VALUES ('SENT'), ('NOT_SENT'), ('READ'), ('UNREAD');

--6. EVENT_CATEGORIES (Categorias do Evento)
CREATE TABLE EVENT_CATEGORIES (
    ID_EVENT_CATEGORY INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    DESCRIPTION_EVENT_CATEGORY VARCHAR(50) UNIQUE NOT NULL
);

INSERT INTO EVENT_CATEGORIES (DESCRIPTION_EVENT_CATEGORY) VALUES ('TECHNOLOGY'), ('MUSIC'), ('EDUCATION'), ('BUSINESS'), ('SPORTS'), ('HEALTH'), ('ART');

--7. USERS (Usuários)--

CREATE TABLE USERS (
    ID_USER INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    ID_USER_TYPE INT NOT NULL,
    NAME_USER VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) UNIQUE NOT NULL,
    PASSWORD_USER VARCHAR(255) NOT NULL,
    PHONE VARCHAR(20),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USER_TYPE) REFERENCES USER_TYPES(ID_USER_TYPE)
);

--8. EVENTS (Eventos)--

CREATE TABLE EVENTS ( --- Pensar num nome diferente para não conflitar com o banco
    ID_EVENT INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    ID_USER INT NOT NULL,
    ID_EVENT_CATEGORY INT NOT NULL,
    ID_STATUS_EVENT INT NOT NULL,
    TITLE VARCHAR(255) NOT NULL,
    DESCRIPTION_EVENT TEXT,
    START_DATE_EVENT TIMESTAMP NOT NULL,
    END_DATE_EVENT TIMESTAMP NOT NULL,
    LOCATION_EVENT VARCHAR(255),
    CAPACITY INT,
    FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER) ON DELETE CASCADE,
    FOREIGN KEY (ID_EVENT_CATEGORY) REFERENCES EVENT_CATEGORIES(ID_EVENT_CATEGORY),
    FOREIGN KEY (ID_STATUS_EVENT) REFERENCES STATUS_EVENT(ID_STATUS_EVENT)
);

--9. TICKETS (Ingressos)--

CREATE TABLE TICKETS (
    ID_TICKET INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    ID_EVENT INT NOT NULL,
    ID_TICKET_TYPES INT NOT NULL,
    PRICE DECIMAL(19,6) NOT NULL,
    AVAILABLE_QUANTITY INT NOT NULL,
    FOREIGN KEY (ID_EVENT) REFERENCES EVENTS(ID_EVENT) ON DELETE CASCADE,
    FOREIGN KEY (ID_TICKET_TYPES) REFERENCES TICKET_TYPES(ID_TICKET_TYPES)
);

--10. ORDERS (Pedidos de Ingressos)--

CREATE TABLE ORDERS (
    ID_ORDER INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    ID_USER INT NOT NULL,
    ID_EVENT INT NOT NULL,
    ID_STATUS_ORDER INT NOT NULL,
    ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    TOTAL DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER) ON DELETE CASCADE,
    FOREIGN KEY (ID_EVENT) REFERENCES EVENTS(ID_EVENT) ON DELETE CASCADE,
    FOREIGN KEY (ID_STATUS_ORDER) REFERENCES STATUS_ORDER(ID_STATUS_ORDER)
);

--11. ORDER_ITEMS (Itens do Pedido)--

CREATE TABLE ORDER_ITEMS (
    ID_ORDER_ITEM INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    ID_ORDER INT NOT NULL,
    ID_TICKET INT NOT NULL,
    QUANTITY INT NOT NULL,
    UNIT_PRICE DECIMAL(19,6) NOT NULL,
    FOREIGN KEY (ID_ORDER) REFERENCES ORDERS(ID_ORDER) ON DELETE CASCADE,
    FOREIGN KEY (ID_TICKET) REFERENCES TICKETS(ID_TICKET) ON DELETE CASCADE
);

--12. EVENT_ACTIVITIES (Atividades do Evento)--

CREATE TABLE EVENT_ACTIVITIES (
    ID_EVENT_ACTIVITY INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    ID_EVENT INT NOT NULL,
    TITLE VARCHAR(255) NOT NULL,
    DESCRIPTION_EVENT_ACTIVITY TEXT,
    SPEAKER VARCHAR(100),
    ACTIVITY_DATE TIMESTAMP NOT NULL,
    DURATION INT, -- (em minutos; repensar esse)
    CAPACITY INT,
    FOREIGN KEY (ID_EVENT) REFERENCES EVENTS(ID_EVENT) ON DELETE CASCADE
);

--13. ACTIVITY_REGISTRATIONS (Inscrições nas Atividades)--

CREATE TABLE ACTIVITY_REGISTRATIONS (
    ID_ACTIVITY_REGISTRATION INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    ID_USER INT NOT NULL,
    ID_EVENT_ACTIVITY INT NOT NULL,
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER) ON DELETE CASCADE,
    FOREIGN KEY (ID_EVENT_ACTIVITY) REFERENCES EVENT_ACTIVITIES(ID_EVENT_ACTIVITY) ON DELETE CASCADE
);

--14. CHECK_IN (Registro de Entrada no Evento)--

CREATE TABLE CHECK_IN (
    ID_CHECK_IN INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    ID_USER INT NOT NULL,
    ID_EVENT INT NOT NULL,
    CHECK_IN_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER) ON DELETE CASCADE,
    FOREIGN KEY (ID_EVENT) REFERENCES EVENTS(ID_EVENT) ON DELETE CASCADE
);

--15. FEEDBACK (Avaliações e Comentários)--

CREATE TABLE FEEDBACK (
    ID_FEEDBACK INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    ID_USER INT NOT NULL,
    ID_EVENT INT NOT NULL,
    ID_EVENT_ACTIVITY INT, -- Pode ser NULL se for um feedback geral do evento
    RATING INT CHECK (RATING BETWEEN 1 AND 5),
    COMMENT TEXT,
    FEEDBACK_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER) ON DELETE CASCADE,
    FOREIGN KEY (ID_EVENT) REFERENCES EVENTS(ID_EVENT) ON DELETE CASCADE,
    FOREIGN KEY (ID_EVENT_ACTIVITY) REFERENCES EVENT_ACTIVITIES(ID_EVENT_ACTIVITY) ON DELETE CASCADE
);

--16. NOTIFICATIONS (Notificações para os Usuários)--

CREATE TABLE NOTIFICATIONS (
    ID_NOTIFICATION INT PRIMARY KEY IDENTITY(1,1), -- Chave primária com incremento automático
    ID_USER INT NOT NULL,
    ID_NOTIFICATION_STATUS INT NOT NULL, 
    MESSAGE_NOTIFICATION TEXT NOT NULL,
    SENT_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER) ON DELETE CASCADE,
    FOREIGN KEY (ID_NOTIFICATION_STATUS) REFERENCES NOTIFICATION_STATUS(ID_NOTIFICATION_STATUS)
);
